# https://taskfile.dev

version: "3"

includes:
  template: ./templates/Taskfile.yml

vars:
  GREETING: Hello, World!

dotenv:
  - ".env"

tasks:
  default:
    cmds:
      - echo "{{.GREETING}}"
    silent: true
  deps:
    cmds:
      - echo "Installing dependencies..."
      - go mod tidy
  lint:
    cmds:
      - task: deps
      - echo "Running linter..."
      - golangci-lint run ./...
    silent: true
  test:
    cmds:
      - task: deps
      - echo "Running tests..."
      - go test ./...
    silent: true
  build:
    cmds:
      - task: deps
      - echo "Building the project..."
      - spin build
    silent: true

  migrate:
    cmds:
      - echo "Running measurement migrations..."
      - "sqlite3 .spin/sqlite_db.db < app/measurement/migration.sql"
      - echo "Migrations applied successfully."
    silent: true
    preconditions:
      - sh: "test -f app/measurement/migration.sql"
        msg: "Migration file app/measurement/migration.sql is required to run this task."
      - sh: "test -f .spin/sqlite_db.db"
        msg: ".spin/sqlite_db.db. directory is required to run this task."
  up:
    aliases:
      - run
    preconditions:
      - sh: "test -f runtime-config.toml"
        msg: "runtime-config.toml file is required to run this task."
    cmds:
      - echo "Starting the application..."
      - spin up --runtime-config-file runtime-config.toml
    silent: true

  deploy:
    cmds:
      - echo "Deploying the application..."
      - spin deploy --variable api_key="{{.SPIN_VARIABLE_API_KEY}}"
    silent: true
    requires:
      vars: [SPIN_VARIABLE_API_KEY]

  "test:e2e":
    cmds:
      - echo "running e2e tests..."
      - hurl test --glob test/e2e/**/*.hurl --variable host={{.API_HOST}} --variable api_key={{.SPIN_VARIABLE_API_KEY}} --test
    requires:
      vars: [API_HOST, SPIN_VARIABLE_API_KEY]
    preconditions:
      - sh: "test -f runtime-config.toml"
        msg: "runtime-config.toml file is required to run this task."
      - sh: "curl --connect-timeout 10 --max-time 15 --silent --head {{.API_HOST}} | grep -q '200'"
        msg: "API host {{.API_HOST}} is not reachable."
